parameters:
  image: ''
  provider: ''
  configuration: ''

stages:
  - stage: cd
    displayName: CD

    jobs:
      - job: publish
        displayName: Publish
        pool:
          vmImage: ubuntu-16.04
        workspace:
          clean: all
        timeoutInMinutes: 240
        variables:
          - group: environment-vagrantcloud

        steps:
          - checkout: self
            submodules: recursive

          - script: |
              df -H
              du -h --max-depth=2 /
              rm -Rf /opt/ghc
              df -H
              du -h --max-depth=2 /
            displayName: Init - Disk space

          - script: |
              dotnet tool install Cake.Tool --global --version 0.33.0
              dotnet --info
              dotnet tool list --global
            displayName: Init - .NET

          - script: |
              wget -q https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
              sudo dpkg -i vagrant_2.2.7_x86_64.deb
              rm vagrant_2.2.7_x86_64.deb
              vagrant --version
            displayName: Init - Vagrant

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(System.DefaultWorkingDirectory)/build/${{ parameters.image }}/${{ parameters.provider }}-${{ parameters.configuration }}
              runVersion: latestFromBranch
              runBranch: $(Build.SourceBranch)
            displayName: Artifacts - Download

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=publish --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Publish
            env:
              VAGRANT_CLOUD_TOKEN: $(environment-vagrant-cloud-token)

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=clean
            displayName: Build - Clean
            condition: always()

      - job: download
        displayName: Download
        pool:
          vmImage: ubuntu-16.04
        workspace:
          clean: all
        timeoutInMinutes: 240
        dependsOn: publish

        steps:
          - checkout: self
            submodules: recursive

          - script: |
              df -H
              rm -Rf /opt/ghc
              df -H
            displayName: Init - Disk space

          - script: |
              dotnet tool install Cake.Tool --global --version 0.33.0
              dotnet --info
              dotnet tool list --global
            displayName: Init - .NET

          - script: |
              wget -q https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
              sudo dpkg -i vagrant_2.2.7_x86_64.deb
              rm vagrant_2.2.7_x86_64.deb
              vagrant --version
            displayName: Init - Vagrant

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(System.DefaultWorkingDirectory)/build/${{ parameters.image }}/${{ parameters.provider }}-${{ parameters.configuration }}
              runVersion: latestFromBranch
              runBranch: $(Build.SourceBranch)
              patterns: '**/checksum.*'
            displayName: Artifacts - Download

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=download --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Download

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=clean
            displayName: Build - Clean
            condition: always()
