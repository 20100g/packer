parameters:
  image: ''
  provider: ''
  configuration: ''

stages:
  - stage: cd
    displayName: CD
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    jobs:
      - job: publish
        displayName: Publish ${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}

        pool:
          vmImage: 'ubuntu-22.04'

        variables:
          - group: environment-vagrantcloud

        steps:
          - checkout: self
            submodules: recursive

          - script: |
              curl -Ls https://gist.github.com/gusztavvargadr/1f0d7dddc7f48549368eaaedf19bfe55/raw/deploy.sh | sudo POLICY_NAME="vagrant" bash -s
            displayName: Initialize agent

          - script: |
              dotnet --info

              dotnet tool restore
            displayName: Initialize .NET

          - script: |
              vagrant --version
              vagrant plugin list

              vagrant box list
              vagrant global-status --prune
            displayName: Initialize Vagrant

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(System.DefaultWorkingDirectory)/build/${{ parameters.image }}/${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Artifacts - Download

          - script: |
              dotnet cake build.cake --target=publish --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Publish
            env:
              VAGRANT_CLOUD_TOKEN: $(environment-vagrant-cloud-token)

          - script: |
              dotnet cake build.cake --target=clean --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }} --recursive true
            displayName: Build - Clean
            condition: always()

      - job: download
        displayName: Download ${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}

        pool:
          vmImage: 'ubuntu-22.04'

        dependsOn: publish

        steps:
          - checkout: self
            submodules: recursive

          - script: |
              df -h
              sudo rm -Rf /usr/local/lib/android
              sudo rm -Rf /usr/local/lib/node_modules
              df -h

              curl -Ls https://gist.github.com/gusztavvargadr/1f0d7dddc7f48549368eaaedf19bfe55/raw/deploy.sh | sudo POLICY_NAME="vagrant" bash -s
            displayName: Initialize agent

          - script: |
              dotnet --info

              dotnet tool restore
            displayName: Initialize .NET

          - script: |
              vagrant --version
              vagrant plugin list

              vagrant box list
              vagrant global-status --prune
            displayName: Initialize Vagrant

          - script: |
              dotnet cake build.cake --target=download --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Download

          - script: |
              dotnet cake build.cake --target=clean --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }} --recursive true
            displayName: Build - Clean
            condition: always()
