parameters:
  image: ''
  provider: ''
  configuration: ''
  parent: ''
  parentDefinitionId: ''

jobs:
  - job: build
    displayName: Build
    pool:
      name: Default
      demands:
        - AZP_AGENT_PACKER -equals ${{ parameters.provider }}
        - AZP_AGENT_VAGRANT -equals ${{ parameters.provider }}
    workspace:
      clean: all
    timeoutInMinutes: 120

    steps:
      - checkout: self
        submodules: recursive
      
      - ${{ if parameters.parent }}:
        - task: DownloadPipelineArtifact@2
          inputs:
            source: specific
            project: $(System.TeamProjectId)
            pipeline: ${{ parameters.parentDefinitionId }}
            # pipeline: ${{ parameters.parent }}-${{ parameters.provider }}-core-ci
            artifact: build
            path: $(System.DefaultWorkingDirectory)/build/${{ parameters.parent }}/${{ parameters.provider }}-core
          displayName: Artifacts - Download

      - script: |
          dotnet cake build.cake --target=restore --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
        displayName: Build - Restore

      - script: |
          dotnet cake build.cake --target=build --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
        displayName: Build - Run

      - publish: $(System.DefaultWorkingDirectory)/build/${{ parameters.image }}/${{ parameters.provider }}-${{ parameters.configuration }}
        artifact: build
        displayName: Artifacts - Publish

      - script: |
          dotnet cake build.cake --target=clean --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
        displayName: Build - Clean
        condition: always()
