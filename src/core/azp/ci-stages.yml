parameters:
  image: ''
  provider: ''
  configuration: ''
  parent: ''

stages:
  - stage: ci
    displayName: CI

    jobs:
      - job: build
        displayName: Build ${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}

        ${{ if eq(parameters.provider, 'virtualbox' }}:
          pool:
            name: linux-virtualbox
        ${{ else }}:
          pool:
            name: Default
            demands:
              - VSTS_AGENT_CAP_HYPERVISOR -equals ${{ parameters.provider }}

        timeoutInMinutes: 90

        steps:
          - checkout: self
            submodules: recursive

          - script: |
              dotnet --info

              dotnet tool restore
            displayName: Initialize .NET

          - script: |
              packer --version
            displayName: Initialize Packer

          - script: |
              vagrant --version
              vagrant plugin list

              vagrant box list
              vagrant global-status
            displayName: Initialize Vagrant

          - ${{ if parameters.parent }}:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build
                  path: $(System.DefaultWorkingDirectory)/build/${{ parameters.parent }}/${{ parameters.provider }}-core
                  source: specific
                  project: $(System.TeamProjectId)
                  pipeline: $(resources.pipeline.parent.pipelineID)
                  runVersion: latestFromBranch
                  runBranch: $(Build.SourceBranch)
                displayName: Artifacts - Download
                condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build
                  path: $(System.DefaultWorkingDirectory)/build/${{ parameters.parent }}/${{ parameters.provider }}-core
                  source: specific
                  project: $(System.TeamProjectId)
                  pipeline: $(resources.pipeline.parent.pipelineID)
                  runVersion: latest
                displayName: Artifacts - Download
                condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

          - script: |
              dotnet cake build.cake --target=restore --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Restore

          - script: |
              dotnet cake build.cake --target=build --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Build

          - script: |
              dotnet cake build.cake --target=test --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }}
            displayName: Build - Test

          - publish: $(System.DefaultWorkingDirectory)/build/${{ parameters.image }}/${{ parameters.provider }}-${{ parameters.configuration }}
            artifact: build
            displayName: Artifacts - Publish

          - script: |
              dotnet cake build.cake --target=clean --configuration=${{ parameters.image }}-${{ parameters.provider }}-${{ parameters.configuration }} --recursive true
            displayName: Build - Clean
            condition: always()
