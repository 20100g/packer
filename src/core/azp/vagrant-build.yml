parameters:
  images: []
  providers: []

jobs:
- ${{ each image in parameters.images }}:
  - ${{ each provider in parameters.providers }}:
    - job: ${{ join('_', image.name) }}_${{ provider }}_vagrant_build
      displayName: Build ${{ join('-', image.name) }}-${{ provider }}-vagrant
      pool:
        name: Default
        demands:
        - AZP_${{ provider }}
      variables:
      - group: artifacts
      workspace:
        clean: all
      timeoutInMinutes: 60

      steps:
      - checkout: self
        submodules: recursive

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: specific
          project: packer
          pipeline: ${{ join('-', image.name) }}-${{ provider }}-core
          downloadType: single
          artifactName: ${{ join('-', image.name) }}-${{ provider }}-core-build

      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: $(Build.ArtifactStagingDirectory)/**/build.*
          destinationFolder: build/${{ join('-', image.name) }}

      - task: DeleteFiles@1
        inputs:
          sourceFolder: $(Build.ArtifactStagingDirectory)
          contents: '**'

      - powershell: |
          dotnet cake build.cake --target=test --configuration=${{ join('-', image.name) }}-${{ provider }}-vagrant
        displayName: Build

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: build/${{ join('-', image.name) }}/${{ provider }}-vagrant
          archiveType: tar
          tarCompression: none
          archiveFile: $(Build.ArtifactStagingDirectory)/build.tar

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: ${{ join('-', image.name) }}-${{ provider }}-vagrant-build
          pathtoPublish: $(Build.ArtifactStagingDirectory)/build.tar
          publishLocation: filePath
          targetPath: $(artifacts-targetpath)

      - task: DeleteFiles@1
        inputs:
          sourceFolder: $(Build.ArtifactStagingDirectory)
          contents: '**'
        condition: always()

      - powershell: |
          dotnet cake build.cake --target=clean
        displayName: Clean Build
        condition: always()
